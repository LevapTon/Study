# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
votes = votes %>% mutate(groups = factor(groups), state = rownames(votes))
ggplot(data = votes, aes(x = votes$X1972, y = votes$1972, color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
votes = votes %>% mutate(groups = factor(groups), state = rownames(votes))
ggplot(data = votes, aes(x = votes$X1972, y = votes$x1972, color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
votes = votes %>% mutate(groups = factor(groups), state = rownames(votes))
ggplot(data = votes, aes(x = votes$X1972, y = votes$x1976, color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
votes = votes %>% mutate(groups = factor(groups), state = rownames(votes))
ggplot(data = votes, aes(x = votes$X1972, y = votes$state, color = groups)) + geom_point()
View(votes)
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
votes = votes %>% mutate(groups = factor(groups))
ggplot(data = votes, aes(x = votes$X1972, y = votes$groups, color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
votes = votes %>% mutate(groups = factor(groups))
ggplot(data = votes, aes(x = votes$X1972, y = rownames(votes), color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
votes = votes %>% mutate(groups = factor(groups))
ggplot(data = votes, aes(x = votes$X1972, y = [0:100], color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
votes = votes %>% mutate(groups = factor(groups))
ggplot(data = votes, aes(x = votes$X1972, y = 0:100, color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
votes = votes %>% mutate(groups = factor(groups))
ggplot(data = votes, aes(x = votes$X1972, y = 100, color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
votes = votes %>% mutate(groups = factor(groups))
ggplot(data = votes, aes(x = votes$X1972, y = votes$X1856, color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
votes = votes %>% mutate(groups = factor(groups))
ggplot(data = votes, aes(x = votes$X1972 , y = votes$X1976, color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
votes = votes %>% mutate(groups = factor(groups))
ggplot(data = votes, aes(x = votes$X1972 , y = votes$X1988, color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
votes = votes %>% mutate(groups = factor(groups))
ggplot(data = votes, aes(x = votes$X1972 , y = votes$X1968, color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
votes = votes %>% mutate(groups = factor(groups))
ggplot(data = votes, aes(x = votes$X1972 , y = votes$X1964, color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
votes = votes %>% mutate(groups = factor(groups))
ggplot(data = votes, aes(x = votes$X1972 , y = votes$X1960, color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
votes = votes %>% mutate(groups = factor(groups))
ggplot(data = votes, aes(x = votes$X1972 , y = votes$X1956, color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(votes)^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
#votes = votes %>% mutate(groups = factor(groups))
#ggplot(data = votes, aes(x = votes$X1972 , y = votes$X1956, color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(votes)^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "single")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
#votes = votes %>% mutate(groups = factor(groups))
#ggplot(data = votes, aes(x = votes$X1972 , y = votes$X1956, color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
#votes = votes %>% mutate(groups = factor(groups))
#ggplot(data = votes, aes(x = votes$X1972 , y = votes$X1956, color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d)
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
#votes = votes %>% mutate(groups = factor(groups))
#ggplot(data = votes, aes(x = votes$X1972 , y = votes$X1956, color = groups)) + geom_point()
# Чтение данных
library("dplyr")
votes = read.table("./votes.repub.txt", header = TRUE)
# Избавляемся от NA
votes[is.na(votes)] = 0
# Заменим номера строк названиями шататов
rownames(votes) = votes$States
# Делаем срез, т.к. для дендрограммы важны голоса, а не штаты
votes = votes[,2:32]
# Получаем расстояния между точками
votes_d = dist(scale(votes))^2
# Получаем кластеризацию
votes_h = hclust(votes_d, method = "ward.D")
plot(votes_h, main = "Дендрограма votes.repub")
# Выделим на графике 3 кластера
rect.hclust(votes_h, k = 3, border="red")
groups = cutree(votes_h, k = 3)
groups
#votes = votes %>% mutate(groups = factor(groups))
#ggplot(data = votes, aes(x = votes$X1972 , y = votes$X1956, color = groups)) + geom_point()
swiss = read.table("./swiss.txt", header = TRUE, row.names = 1)
View(swiss)
View(swiss)
swiss = read.table("./swiss.txt", header = TRUE, row.names = 1)
swiss = read.table("./swiss.txt", header = TRUE, row.names = 1)
swiss = read.table("./swiss.txt", header = TRUE, row.names = 1)
swiss = read.table("./swiss.txt")
swiss = read.table("./votes.txt")
swiss = read.table("./votes.repub.txt")
swiss_pca = prcomp(swiss)
swiss = read.table("./votes.repub.txt", header = TRUE)
swiss_pca = prcomp(swiss)
swiss = read.table("./votes.repub.txt", header = TRUE, row.names = 1)
swiss_pca = prcomp(swiss)
View(swiss)
swiss = read.table("./swiss.txt", header = TRUE, row.names = 1)
swiss = read.table("./swissdata.txt", header = TRUE, row.names = 1)
swiss = read.table("./swiss.txt", header = TRUE, row.names = 1)
swiss = read.table("./swiss.txt", header = TRUE, row.names = 1)
swiss = read.table("./swiss.txt", header = TRUE, row.names = 1)
swiss = read.table("./swiss.txt", header = TRUE, row.names = 1)
swiss = read.table("./swiss.txt", header = TRUE, sep = ",", row.names = 1)
swiss_pca = prcomp(swiss)
View(swiss)
swiss = read.table("./swiss.txt", header = TRUE, sep = ",", row.names = 1)
swiss_pca = prcomp(swiss)
fviz_eig(swiss_pca, addlabels = TRUE, xlab = colnames(swiss),
main = "Диаграма зависимости компонент", ylab = "Процент объяснения изменчивости")
swiss = read.table("./swiss.txt", header = TRUE, sep = ",", row.names = 1)
swiss_pca = prcomp(swiss)
fviz_eig(swiss_pca, addlabels = TRUE, xlab = "Признаки",
main = "Диаграма зависимости компонент", ylab = "Процент объяснения изменчивости")
swiss = read.table("./swiss.txt", header = TRUE, sep = ",", row.names = 1)
swiss_pca = prcomp(swiss)
fviz_eig(swiss_pca, addlabels = TRUE, xlab = "Признаки", barplot.default(names.arg = colnames(swiss)),
main = "Диаграма зависимости компонент", ylab = "Процент объяснения изменчивости")
swiss = read.table("./swiss.txt", header = TRUE, sep = ",", row.names = 1)
swiss_pca = prcomp(swiss)
fviz_eig(swiss_pca, addlabels = TRUE, xlab = "Признаки", barplot.default(height = 80, names.arg = colnames(swiss)),
main = "Диаграма зависимости компонент", ylab = "Процент объяснения изменчивости")
swiss = read.table("./swiss.txt", header = TRUE, sep = ",", row.names = 1)
swiss_pca = prcomp(swiss)
fviz_eig(swiss_pca, addlabels = TRUE, xlab = "Признаки", labels(colnames(swiss)),
main = "Диаграма зависимости компонент", ylab = "Процент объяснения изменчивости")
swiss = read.table("./swiss.txt", header = TRUE, sep = ",", row.names = 1)
swiss_pca = prcomp(swiss)
fviz_eig(swiss_pca, addlabels = TRUE, xlab = "Признаки", labels = colnames(swiss),
main = "Диаграма зависимости компонент", ylab = "Процент объяснения изменчивости")
swiss = read.table("./swiss.txt", header = TRUE, sep = ",", row.names = 1)
swiss_pca = prcomp(swiss)
fviz_eig(swiss_pca, addlabels = TRUE, xlab = "Признаки",
main = "Диаграма зависимости компонент", ylab = "Процент объяснения изменчивости")
eig_plot + scale_x_discrete(labels = colnames(swiss))
library(factoextra)
swiss = read.table("./swiss.txt", header = TRUE, sep = ",", row.names = 1)
swiss_pca = prcomp(swiss)
fviz_eig(swiss_pca, addlabels = TRUE, xlab = "Признаки",
main = "Диаграма зависимости компонент", ylab = "Процент объяснения изменчивости")
eig_plot + scale_x_discrete(labels = colnames(swiss))
library(factoextra)
swiss = read.table("./swiss.txt", header = TRUE, sep = ",", row.names = 1)
swiss_pca = prcomp(swiss)
fviz_eig(swiss_pca, addlabels = TRUE, xlab = "Признаки",
main = "Диаграма зависимости компонент", ylab = "Процент объяснения изменчивости" +
scale_x_discrete(labels = colnames(swiss))  )
library(factoextra)
swiss = read.table("./swiss.txt", header = TRUE, sep = ",", row.names = 1)
swiss_pca = prcomp(swiss)
graph = fviz_eig(swiss_pca, addlabels = TRUE, xlab = "Признаки",
main = "Диаграма зависимости компонент", ylab = "Процент объяснения изменчивости")
graph  +
scale_x_discrete(labels = colnames(swiss))
graph
library(factoextra)
swiss = read.table("./swiss.txt", header = TRUE, sep = ",", row.names = 1)
swiss_pca = prcomp(scale(swiss))
graph = fviz_eig(swiss_pca, addlabels = TRUE, xlab = "Признаки",
main = "Диаграма зависимости компонент", ylab = "Процент объяснения изменчивости")
graph  +
scale_x_discrete(labels = colnames(swiss))
graph
library(factoextra)
swiss = read.table("./swiss.txt", header = TRUE, sep = ",", row.names = 1)
swiss_pca = prcomp(swiss)
graph = fviz_eig(swiss_pca, addlabels = TRUE, xlab = "Признаки",
main = "Диаграма зависимости компонент", ylab = "Процент объяснения изменчивости")
graph  +
scale_x_discrete(labels = colnames(swiss))
graph
library(factoextra)
swiss = read.table("./swiss.txt", header = TRUE, sep = ",", row.names = 1)
swiss_pca = prcomp(swiss)
fviz_eig(swiss_pca, addlabels = TRUE, xlab = "Признаки",
main = "Диаграма зависимости компонент", ylab = "Процент объяснения изменчивости")
