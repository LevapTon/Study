/* ------------------------------------------------------------------------- */
/*  Данный файл является частью комплекта исходных текстов,                  */
/*  иллюстрирующих материал следующего издания:                              */
/*  Федотов И.Е.                                                             */
/*  Модели параллельного программирования. - М.: СОЛОН-ПРЕСС, 2012. - 384 с. */
/*  ISBN 978-5-91359-102-9                                                   */
/*                                                                           */
/*  Как и само издание, прилагаемые к нему исходные тексты предназначены     */
/*  лишь для ознакомления с принципами высокоуровневого построения           */
/*  параллельных программ, а также для проведения дальнейших экспериментов.  */
/*  Использование этого кода в качестве основы для реальных программ         */
/*  допустимо, однако требует доработок и может осуществляться лишь          */
/*  на личный страх и риск разработчика.                                     */
/*  Исходные тексты предоставляются "как есть", без каких бы то ни было      */
/*  явных или неявных гарантий пригодности к практическому применению.       */
/*                                                                           */
/*  Copyright © 2008-2011 Федотов И.Е.                                       */
/* ------------------------------------------------------------------------- */


#include <cstdio>
#include <cstdlib>
#include <cmath>

using namespace std;

double f(double x, double y)
{
    return sqrt(1.0 - x * x - y * y);
}

int main(int argc, char *argv[])
{
    int rc = 2;
    // количество разбиений
    int n;
    // сторона треугольного основания призмы
    double a = 1.0;

    // получение количества разбиений из командной строки
    if (argc == 2 && (n = strtol(argv[1], NULL, 0)) > 0)
    {
        double h = a / n, v = 0.0;

        for (int i = 0; i < n; ++i)
        {
            for (int j = 0; j <= i; ++j)
            {
                double x = (n - i - 0.5) * h;
                double y = (j + 0.5) * h;
                double s = h * h * ((j < i) ? 1.0 : 0.5);
                v += f(x, y) * s;
            };
        };

        fprintf(stdout, "%.16f\n", v);

        // успешное завершение
        rc = 0;
    }
    else
        fprintf(stderr, "error: iternum is not specified\n");

    return rc;
}
