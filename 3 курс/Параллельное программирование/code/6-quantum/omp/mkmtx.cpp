/* ------------------------------------------------------------------------- */
/*  Данный файл является частью комплекта исходных текстов,                  */
/*  иллюстрирующих материал следующего издания:                              */
/*  Федотов И.Е.                                                             */
/*  Модели параллельного программирования. - М.: СОЛОН-ПРЕСС, 2012. - 384 с. */
/*  ISBN 978-5-91359-102-9                                                   */
/*                                                                           */
/*  Как и само издание, прилагаемые к нему исходные тексты предназначены     */
/*  лишь для ознакомления с принципами высокоуровневого построения           */
/*  параллельных программ, а также для проведения дальнейших экспериментов.  */
/*  Использование этого кода в качестве основы для реальных программ         */
/*  допустимо, однако требует доработок и может осуществляться лишь          */
/*  на личный страх и риск разработчика.                                     */
/*  Исходные тексты предоставляются "как есть", без каких бы то ни было      */
/*  явных или неявных гарантий пригодности к практическому применению.       */
/*                                                                           */
/*  Copyright © 2008-2011 Федотов И.Е.                                       */
/* ------------------------------------------------------------------------- */


#include <sstream>
#include "zquantum.hxx"
#include "../../common/synprintf.hxx"


using namespace std;
using namespace z;
using namespace z::quantum;

int main(int argc, char *argv[])
{
    quantum_machine_type qm(3);
    qm.add_ternary(gate_toffoli_type(), 0, 1, 2);

    matrix_type<quantum_machine_type::element_type> mtx = qm.build_matrix();
    ostringstream ostr;
    ostr.setf(ios::fixed);
    for (int i = 0; i < mtx.vsize(); ++i)
    {
        for (int j = 0; j < mtx.hsize(); ++j)
            ostr << mtx(i, j) << " ";
        ostr << endl;
    };
    synprintf(stdout, "%s", ostr.str().c_str());

    return 0;
}
